// <auto-generated />
using System;
using JMCRM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JMCRM.Migrations
{
    [DbContext(typeof(JMCRMDbContext))]
    [Migration("20210914032428_AddedStorylinesAndEvents")]
    partial class AddedStorylinesAndEvents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JMCRM.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ContactId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("JMCRM.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventContactContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OccurenceDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StorylineId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("EventContactContactId");

                    b.HasIndex("StorylineId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("JMCRM.Models.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Control")
                        .HasColumnType("bit");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("JMCRM.Models.Storyline", b =>
                {
                    b.Property<int>("StorylineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorylineId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Storyline");
                });

            modelBuilder.Entity("JMCRM.Models.Contact", b =>
                {
                    b.HasOne("JMCRM.Models.Project", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("JMCRM.Models.Event", b =>
                {
                    b.HasOne("JMCRM.Models.Contact", "EventContact")
                        .WithMany()
                        .HasForeignKey("EventContactContactId");

                    b.HasOne("JMCRM.Models.Storyline", null)
                        .WithMany("Events")
                        .HasForeignKey("StorylineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventContact");
                });

            modelBuilder.Entity("JMCRM.Models.Storyline", b =>
                {
                    b.HasOne("JMCRM.Models.Project", null)
                        .WithMany("Storylines")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("JMCRM.Models.Project", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Storylines");
                });

            modelBuilder.Entity("JMCRM.Models.Storyline", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
